---
// src/components/TestimonialCard.astro
import type { Testimonial } from '../types'

export interface Props {
  testimonial: Testimonial;
}

const { testimonial } = Astro.props
const photoUrl = testimonial.metadata?.client_photo?.imgix_url
const rating = parseInt(testimonial.metadata?.rating?.key || '5')
---

<div class="card h-full">
  <div class="mb-4">
    <div class="flex space-x-1 mb-4">
      {Array.from({ length: 5 }, (_, i) => (
        <svg 
          class={`w-5 h-5 ${i < rating ? 'text-yellow-400' : 'text-gray-300'}`}
          fill="currentColor" 
          viewBox="0 0 20 20"
        >
          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
        </svg>
      ))}
    </div>
    
    {testimonial.metadata?.project_type && (
      <span class="inline-block bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded mb-4">
        {testimonial.metadata.project_type}
      </span>
    )}
  </div>
  
  <blockquote class="text-gray-600 mb-6">
    "{testimonial.metadata?.testimonial_text}"
  </blockquote>
  
  <div class="flex items-center mt-auto">
    {photoUrl && (
      <img 
        src={`${photoUrl}?w=100&h=100&fit=crop&auto=format,compress`}
        alt={testimonial.metadata?.client_name}
        width="50"
        height="50"
        class="w-12 h-12 rounded-full object-cover mr-4"
      />
    )}
    
    <div>
      <div class="font-semibold text-gray-900">
        {testimonial.metadata?.client_name}
      </div>
      {testimonial.metadata?.job_title && testimonial.metadata?.company && (
        <div class="text-sm text-gray-500">
          {testimonial.metadata.job_title} at {testimonial.metadata.company}
        </div>
      )}
    </div>
  </div>
</div>